"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/scripts/migration-data.ts":
/*!***************************************!*\
  !*** ./src/scripts/migration-data.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   migrationScripts: function() { return /* binding */ migrationScripts; }\n/* harmony export */ });\n/* harmony import */ var _services_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/services/api */ \"(app-pages-browser)/./src/services/api.ts\");\n\nconst RESTAURANTS = [\n    {\n        name: \"Sabor Oriental Sushi\",\n        category: \"Japon\\xeas\",\n        rating: 4.8,\n        menu: [\n            {\n                name: \"Combo 30 Pe\\xe7as\",\n                price: 89.90,\n                description: \"10 hossomakis, 10 uramakis e 10 niguiris variados\"\n            },\n            {\n                name: \"Hot Roll Especial\",\n                price: 32.90,\n                description: \"8 pe\\xe7as de hot roll com salm\\xe3o grelhado e cream cheese\"\n            },\n            {\n                name: \"Temaki Salm\\xe3o\",\n                price: 28.90,\n                description: \"Temaki de salm\\xe3o fresco com cream cheese e cebolinha\"\n            }\n        ]\n    },\n    {\n        name: \"La Pasta Aut\\xeantica\",\n        category: \"Italiano\",\n        rating: 4.7,\n        menu: [\n            {\n                name: \"Fettuccine ao Funghi\",\n                price: 58.90,\n                description: \"Massa fresca com mix de cogumelos e creme de leite fresco\"\n            },\n            {\n                name: \"Lasanha Bolonhesa\",\n                price: 49.90,\n                description: \"Lasanha artesanal com molho bolonhesa e bechamel\"\n            },\n            {\n                name: \"Ravioli de Mozzarella\",\n                price: 54.90,\n                description: \"Massa recheada com mozzarella ao sugo\"\n            }\n        ]\n    },\n    {\n        name: \"Burger House Premium\",\n        category: \"Hamb\\xfarguer\",\n        rating: 4.6,\n        menu: [\n            {\n                name: \"Classic Cheese\",\n                price: 32.90,\n                description: \"Blend 180g, cheddar, alface, tomate e molho especial\"\n            },\n            {\n                name: \"BBQ Bacon\",\n                price: 38.90,\n                description: \"Blend 180g, bacon crocante, cebola caramelizada e molho BBQ\"\n            },\n            {\n                name: \"Veggie Supreme\",\n                price: 34.90,\n                description: \"Hamb\\xfarguer de gr\\xe3o de bico, abacate e maionese vegana\"\n            }\n        ]\n    }\n];\nconst DELIVERY_STATUSES = [\n    \"\\uD83D\\uDFE1 Pedido Recebido\",\n    \"\\uD83D\\uDFE0 Em Prepara\\xe7\\xe3o\",\n    \"\\uD83D\\uDD35 Saiu para Entrega\",\n    \"\\uD83D\\uDFE2 Entregue\",\n    \"⚪ Cancelado\"\n];\nconst CUSTOMER_REVIEWS = [\n    \"Comida excelente! Entrega r\\xe1pida e embalagem muito bem feita.\",\n    \"Pedido chegou no tempo previsto e a temperatura estava perfeita.\",\n    \"\\xd3timo custo-benef\\xedcio. Com certeza pedirei novamente!\",\n    \"A apresenta\\xe7\\xe3o do prato superou minhas expectativas.\",\n    \"Por\\xe7\\xf5es generosas e sabor incr\\xedvel.\"\n];\n// Script para limpar dados\nasync function cleanupData() {\n    try {\n        // Limpar boards do Trello\n        const trelloBoards = await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.get(\"/members/me/boards\");\n        for (const board of trelloBoards.data){\n            await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.delete(\"/boards/\".concat(board.id));\n        }\n        // Limpar projetos do Asana\n        const user = await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.get(\"/users/me\");\n        const workspaceId = user.data.data.workspaces[0].gid;\n        const asanaProjects = await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.get(\"/workspaces/\".concat(workspaceId, \"/projects\"));\n        for (const project of asanaProjects.data.data){\n            await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.delete(\"/projects/\".concat(project.gid));\n        }\n        console.log(\"✅ Todos os dados foram limpos com sucesso!\");\n    } catch (error) {\n        console.error(\"Erro ao limpar dados:\", error);\n    }\n}\n// Script para popular com dados reais de trabalho\nasync function populateWorkData() {\n    try {\n        // Criar labels padrão para usar nos boards\n        const labels = [\n            {\n                name: \"Bug\",\n                color: \"red\"\n            },\n            {\n                name: \"Feature\",\n                color: \"green\"\n            },\n            {\n                name: \"Enhancement\",\n                color: \"blue\"\n            },\n            {\n                name: \"Documentation\",\n                color: \"purple\"\n            },\n            {\n                name: \"High Priority\",\n                color: \"orange\"\n            },\n            {\n                name: \"Backend\",\n                color: \"yellow\"\n            },\n            {\n                name: \"Frontend\",\n                color: \"sky\"\n            },\n            {\n                name: \"DevOps\",\n                color: \"black\"\n            }\n        ];\n        // Criar boards no Trello com estrutura real de trabalho\n        const developmentBoard = await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards\", {\n            name: \"Desenvolvimento de Produto\",\n            desc: \"Pipeline principal de desenvolvimento do produto\",\n            defaultLists: false\n        });\n        // Criar labels para o board\n        for (const label of labels){\n            await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(developmentBoard.data.id, \"/labels\"), label);\n        }\n        // Criar listas padrão de desenvolvimento\n        const lists = [\n            {\n                name: \"Backlog\",\n                pos: \"bottom\"\n            },\n            {\n                name: \"To Do\",\n                pos: \"bottom\"\n            },\n            {\n                name: \"In Progress\",\n                pos: \"bottom\"\n            },\n            {\n                name: \"Code Review\",\n                pos: \"bottom\"\n            },\n            {\n                name: \"QA\",\n                pos: \"bottom\"\n            },\n            {\n                name: \"Done\",\n                pos: \"bottom\"\n            }\n        ];\n        for (const list of lists){\n            await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/lists\", {\n                name: list.name,\n                idBoard: developmentBoard.data.id,\n                pos: list.pos\n            });\n        }\n        // Criar cards com exemplos reais\n        const cards = [\n            {\n                name: \"Implementar Autentica\\xe7\\xe3o OAuth2\",\n                desc: \"Implementar sistema de autentica\\xe7\\xe3o usando OAuth2 com suporte a m\\xfaltiplos providers\",\n                labels: [\n                    \"Backend\",\n                    \"High Priority\"\n                ],\n                list: \"In Progress\"\n            },\n            {\n                name: \"Refatorar Componentes React\",\n                desc: \"Refatorar componentes para usar Hooks e melhorar performance\",\n                labels: [\n                    \"Frontend\",\n                    \"Enhancement\"\n                ],\n                list: \"Code Review\"\n            },\n            {\n                name: \"Setup Pipeline CI/CD\",\n                desc: \"Configurar pipeline de integra\\xe7\\xe3o e deploy cont\\xednuo usando GitHub Actions\",\n                labels: [\n                    \"DevOps\",\n                    \"High Priority\"\n                ],\n                list: \"To Do\"\n            },\n            {\n                name: \"Bug: Memory Leak em Produ\\xe7\\xe3o\",\n                desc: \"Investigar e corrigir memory leak reportado em produ\\xe7\\xe3o\",\n                labels: [\n                    \"Bug\",\n                    \"High Priority\",\n                    \"Backend\"\n                ],\n                list: \"In Progress\"\n            },\n            {\n                name: \"Documentar API REST\",\n                desc: \"Criar documenta\\xe7\\xe3o completa da API usando Swagger\",\n                labels: [\n                    \"Documentation\",\n                    \"Backend\"\n                ],\n                list: \"QA\"\n            }\n        ];\n        // Obter IDs das listas criadas\n        const boardLists = await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.get(\"/boards/\".concat(developmentBoard.data.id, \"/lists\"));\n        const listsMap = boardLists.data.reduce((acc, list)=>{\n            acc[list.name] = list.id;\n            return acc;\n        }, {});\n        // Obter IDs das labels criadas\n        const boardLabels = await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.get(\"/boards/\".concat(developmentBoard.data.id, \"/labels\"));\n        const labelsMap = boardLabels.data.reduce((acc, label)=>{\n            acc[label.name] = label.id;\n            return acc;\n        }, {});\n        // Criar os cards\n        for (const card of cards){\n            const cardLabels = card.labels.map((labelName)=>labelsMap[labelName]);\n            await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/cards\", {\n                name: card.name,\n                desc: card.desc,\n                idList: listsMap[card.list],\n                idLabels: cardLabels\n            });\n        }\n        // Criar projeto no Asana\n        const user = await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.get(\"/users/me\");\n        const workspaceId = user.data.data.workspaces[0].gid;\n        const asanaProject = await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/projects\", {\n            data: {\n                name: \"Desenvolvimento de Produto\",\n                workspace: workspaceId,\n                notes: \"Pipeline principal de desenvolvimento do produto\"\n            }\n        });\n        // Criar seções no Asana\n        const sections = [\n            \"Backlog\",\n            \"To Do\",\n            \"In Progress\",\n            \"Review\",\n            \"Testing\",\n            \"Complete\"\n        ];\n        for (const section of sections){\n            await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/sections\", {\n                data: {\n                    name: section,\n                    project: asanaProject.data.data.gid\n                }\n            });\n        }\n        console.log(\"✅ Dados de exemplo foram criados com sucesso!\");\n    } catch (error) {\n        console.error(\"Erro ao popular dados:\", error);\n    }\n}\nconst migrationScripts = {\n    cleanup: cleanupData,\n    async populate () {\n        try {\n            // Criando board principal no Trello\n            const mainBoard = await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards\", {\n                name: \"Sistema de Delivery\",\n                desc: \"Gest\\xe3o completa do sistema de delivery com pedidos, restaurantes e avalia\\xe7\\xf5es\",\n                defaultLists: false\n            });\n            // Criando listas para diferentes aspectos do negócio\n            const lists = await Promise.all([\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/lists\"), {\n                    name: \"\\uD83D\\uDCCB Novos Pedidos\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/lists\"), {\n                    name: \"\\uD83D\\uDC68‍\\uD83C\\uDF73 Em Prepara\\xe7\\xe3o\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/lists\"), {\n                    name: \"\\uD83D\\uDEF5 Em Entrega\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/lists\"), {\n                    name: \"✅ Entregues\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/lists\"), {\n                    name: \"⭐ Avalia\\xe7\\xf5es\"\n                })\n            ]);\n            // Criando labels para categorização\n            const labels = await Promise.all([\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/labels\"), {\n                    name: \"Urgente\",\n                    color: \"red\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/labels\"), {\n                    name: \"VIP\",\n                    color: \"purple\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/labels\"), {\n                    name: \"Novo Cliente\",\n                    color: \"green\"\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/boards/\".concat(mainBoard.data.id, \"/labels\"), {\n                    name: \"Pedido Grande\",\n                    color: \"yellow\"\n                })\n            ]);\n            // Criando cards de pedidos com dados realistas\n            for (const restaurant of RESTAURANTS){\n                for(let i = 0; i < 3; i++){\n                    const randomMenu = restaurant.menu[Math.floor(Math.random() * restaurant.menu.length)];\n                    const randomStatus = Math.floor(Math.random() * 3);\n                    const isVIP = Math.random() > 0.7;\n                    const isUrgent = Math.random() > 0.8;\n                    await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/cards\", {\n                        idList: lists[randomStatus].data.id,\n                        name: \"Pedido #\".concat(Math.floor(Math.random() * 9000) + 1000, \" - \").concat(restaurant.name),\n                        desc: \"\\uD83C\\uDF7D️ Item: \".concat(randomMenu.name, \"\\n\") + \"\\uD83D\\uDCB0 Valor: R$ \".concat(randomMenu.price.toFixed(2), \"\\n\") + \"\\uD83D\\uDCDD Observa\\xe7\\xf5es: \".concat(randomMenu.description, \"\\n\") + \"⭐ Avalia\\xe7\\xe3o do Restaurante: \".concat(restaurant.rating, \"\\n\") + \"\\uD83C\\uDFF7️ Categoria: \".concat(restaurant.category),\n                        idLabels: [\n                            ...isVIP ? [\n                                labels[1].data.id\n                            ] : [],\n                            ...isUrgent ? [\n                                labels[0].data.id\n                            ] : []\n                        ]\n                    });\n                }\n                // Criando avaliações para cada restaurante\n                const randomReview = CUSTOMER_REVIEWS[Math.floor(Math.random() * CUSTOMER_REVIEWS.length)];\n                await _services_api__WEBPACK_IMPORTED_MODULE_0__.trelloApi.post(\"/cards\", {\n                    idList: lists[4].data.id,\n                    name: \"Avalia\\xe7\\xe3o - \".concat(restaurant.name),\n                    desc: \"⭐ \".concat(restaurant.rating, '/5.0\\n\\n\"').concat(randomReview, '\"\\n\\n\\uD83D\\uDCC5 ').concat(new Date().toLocaleDateString()),\n                    idLabels: restaurant.rating >= 4.7 ? [\n                        labels[1].data.id\n                    ] : []\n                });\n            }\n            // Criando projeto no Asana\n            const user = await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.get(\"/users/me\");\n            const workspaceId = user.data.data.workspaces[0].gid;\n            const deliveryProject = await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/projects\", {\n                data: {\n                    name: \"Gest\\xe3o de Delivery\",\n                    workspace: workspaceId,\n                    notes: \"Sistema completo de gest\\xe3o de delivery com pedidos, restaurantes e avalia\\xe7\\xf5es\"\n                }\n            });\n            // Criando seções no Asana\n            const sections = await Promise.all([\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/sections\", {\n                    data: {\n                        project: deliveryProject.data.data.gid,\n                        name: \"\\uD83C\\uDFEA Restaurantes Parceiros\"\n                    }\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/sections\", {\n                    data: {\n                        project: deliveryProject.data.data.gid,\n                        name: \"\\uD83D\\uDCCA M\\xe9tricas e Desempenho\"\n                    }\n                }),\n                _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/sections\", {\n                    data: {\n                        project: deliveryProject.data.data.gid,\n                        name: \"\\uD83D\\uDCC8 Metas Mensais\"\n                    }\n                })\n            ]);\n            // Criando tarefas para cada restaurante\n            for (const restaurant of RESTAURANTS){\n                await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/tasks\", {\n                    data: {\n                        workspace: workspaceId,\n                        projects: [\n                            deliveryProject.data.data.gid\n                        ],\n                        name: restaurant.name,\n                        notes: \"\\uD83C\\uDFF7️ Categoria: \".concat(restaurant.category, \"\\n\") + \"⭐ Avalia\\xe7\\xe3o: \".concat(restaurant.rating, \"/5.0\\n\\n\") + \"\\uD83D\\uDCCB Card\\xe1pio:\\n\" + restaurant.menu.map((item)=>\"• \".concat(item.name, \" - R$ \").concat(item.price.toFixed(2), \"\\n  \").concat(item.description)).join(\"\\n\\n\"),\n                        memberships: [\n                            {\n                                project: deliveryProject.data.data.gid,\n                                section: sections[0].data.data.gid\n                            }\n                        ]\n                    }\n                });\n            }\n            // Criando métricas de desempenho\n            const metrics = [\n                {\n                    name: \"Taxa de Entrega no Prazo\",\n                    target: \"95%\",\n                    current: \"93.5%\"\n                },\n                {\n                    name: \"Satisfa\\xe7\\xe3o do Cliente\",\n                    target: \"4.8/5.0\",\n                    current: \"4.6/5.0\"\n                },\n                {\n                    name: \"Tempo M\\xe9dio de Entrega\",\n                    target: \"35 min\",\n                    current: \"38 min\"\n                }\n            ];\n            for (const metric of metrics){\n                await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/tasks\", {\n                    data: {\n                        workspace: workspaceId,\n                        projects: [\n                            deliveryProject.data.data.gid\n                        ],\n                        name: metric.name,\n                        notes: \"\\uD83C\\uDFAF Meta: \".concat(metric.target, \"\\n\") + \"\\uD83D\\uDCCA Atual: \".concat(metric.current, \"\\n\\n\") + \"Atualizado em: \".concat(new Date().toLocaleDateString()),\n                        memberships: [\n                            {\n                                project: deliveryProject.data.data.gid,\n                                section: sections[1].data.data.gid\n                            }\n                        ]\n                    }\n                });\n            }\n            // Criando metas mensais\n            const goals = [\n                {\n                    name: \"Aumentar Base de Restaurantes\",\n                    target: \"+15 novos parceiros\"\n                },\n                {\n                    name: \"Reduzir Tempo de Entrega\",\n                    target: \"-5 minutos em m\\xe9dia\"\n                },\n                {\n                    name: \"Melhorar Rating M\\xe9dio\",\n                    target: \"Atingir 4.8/5.0\"\n                }\n            ];\n            for (const goal of goals){\n                await _services_api__WEBPACK_IMPORTED_MODULE_0__.asanaApi.post(\"/tasks\", {\n                    data: {\n                        workspace: workspaceId,\n                        projects: [\n                            deliveryProject.data.data.gid\n                        ],\n                        name: goal.name,\n                        notes: \"\\uD83C\\uDFAF Meta: \".concat(goal.target, \"\\n\") + \"\\uD83D\\uDCC5 Prazo: \".concat(new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString()),\n                        memberships: [\n                            {\n                                project: deliveryProject.data.data.gid,\n                                section: sections[2].data.data.gid\n                            }\n                        ]\n                    }\n                });\n            }\n            return true;\n        } catch (error) {\n            console.error(\"Erro ao popular dados:\", error);\n            throw error;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/scripts/migration-data.ts\n"));

/***/ })

});